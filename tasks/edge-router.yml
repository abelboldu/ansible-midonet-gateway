---

- name: Set keystone environment
  set_fact:
    keystone_env:
     OS_USERNAME: '{{ midonet_gateway_keystone_username }}'
     OS_TENANT_NAME: '{{ midonet_gateway_keystone_project }}'
     OS_PASSWORD:  '{{ midonet_gateway_keystone_password }}'
     OS_AUTH_URL: 'http://{{ midonet_gateway_keystone_hostname }}:{{ midonet_gateway_keystone_port }}/v3'
     OS_PROJECT_DOMAIN_NAME: '{{ midonet_gateway_keystone_project_domain_name }}'
     OS_USER_DOMAIN_NAME: '{{ midonet_gateway_keystone_user_domain_name }}'

- name: Grab routers
  command: neutron router-list
  register: router_list
  changed_when: False
  environment: '{{ keystone_env }}'

- name: Create edge router
  command: neutron router-create '{{ midonet_gateway_edge_router_name }}'
  when: '"{{ midonet_gateway_edge_router_name }}" not in router_list.stdout'
  environment: '{{ keystone_env }}'

- name: Add router interface
  command: neutron router-interface-add '{{ midonet_gateway_edge_router_name }}' '{{ midonet_gateway_external_subnet_name }}'
  when: '"{{ midonet_gateway_edge_router_name }}" not in router_list.stdout'
  environment: '{{ keystone_env }}'

- name: Grab networks
  command: neutron net-list
  register: net_list
  changed_when: False
  environment: '{{ keystone_env }}'

- name: Create edge network
  command: neutron net-create {{ midonet_gateway_edge_network_name }} --tenant_id {{ midonet_gateway_keystone_project }} --provider:network_type uplink
  when: '"{{ midonet_gateway_edge_network_name }}" not in net_list.stdout'
  environment: '{{ keystone_env }}'

- name: Grab subnets
  command: neutron subnet-list
  register: subnet_list
  changed_when: False
  environment: '{{ keystone_env }}'

- name: Create edge subnet
  command: >
    neutron subnet-create  '{{ midonet_gateway_edge_network_name  }}'
    '{{ midonet_gateway_veth_network }}' --name  '{{ midonet_gateway_edge_subnet_name }}'
    --disable-dhcp
  when: '"{{ midonet_gateway_edge_subnet_name }}" not in subnet_list.stdout'
  environment: '{{ keystone_env }}'

- name: Grab ports
  command: neutron port-list
  register: port_list
  changed_when: False
  environment: '{{ keystone_env }}'

- name: Create uplink port
  command: >
    neutron port-create "{{ midonet_gateway_edge_network_name }}" --binding:host_id
    "{{ ansible_hostname }}" --binding:profile type=dict
    interface_name="{{ midonet_gateway_uplink_nic }}" --fixed-ip ip_address="{{ midonet_gateway_veth1_ip  | ipaddr('address') }}"
    --name "{{ midonet_gateway_edge_port_name }}"
  register: create_uplink_port
  when: '"{{ midonet_gateway_edge_port_name }}" not in port_list.stdout'
  environment: '{{ keystone_env }}'

- name: Add interface to router
  command: neutron router-interface-add {{ midonet_gateway_edge_router_name }} port={{ midonet_gateway_edge_port_name }}
  when: create_uplink_port.changed
  environment: '{{ keystone_env }}'
